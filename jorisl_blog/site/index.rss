<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>JorisL blog</title><link>http://</link><description>My personal blog</description><pubDate>Mon, 14 Oct 2024 00:00:00 GMT</pubDate><lastBuildDate>Mon, 28 Jul 2025 12:10:42 GMT</lastBuildDate><generator>marmite</generator><item><title>Z3 intransitive dice</title><link>http:///z3-intransitive-dice.html</link><description><![CDATA["Using the Z3 theorem prover in Julia to generate 'rock-paper-scissor dice'."]]></description><category>programming</category><category>Julia</category><category>Z3</category><guid>http:///z3-intransitive-dice.html</guid><pubDate>Mon, 14 Oct 2024 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p><a href="https://blog.jorisl.nl/media/z3_intransitive_dice/z3_intransitive_dice.html">Link to Jupyter notebook</a></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Munipacking through the highlands</title><link>http:///munipacking-through-the-highlands.html</link><description><![CDATA["Off-road unicycle backpacking through the Scottish Highlands."]]></description><category>unicycling</category><guid>http:///munipacking-through-the-highlands.html</guid><pubDate>Mon, 14 Oct 2024 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<h1><a href="#munipacking-through-the-highlands" aria-hidden="true" class="anchor" id="munipacking-through-the-highlands"></a>Munipacking through the Highlands</h1>
<p>In 2022 and 2024 I backpacked the East Highland Way and Great Glenn Way respectively on my mountain-unicycle.
The <a href="https://unicyclist.com/t/riding-east-highland-trail-in-scotland-with-pictures/275533">Unicyclist forum thread</a> contains lots of pictures I've made during those tours.</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Writing a simple lisp in LabVIEW and Nim</title><link>http:///writing-a-simple-lisp-in-labview-and-nim.html</link><description><![CDATA["Making my own programming language, first in LabVIEW and then in Nim."]]></description><category>programming</category><category>lisp</category><category>LabVIEW</category><category>Nim</category><guid>http:///writing-a-simple-lisp-in-labview-and-nim.html</guid><pubDate>Sun, 15 Jan 2023 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>Learning how to make an interpreter for a custom programming language was a challenge I wanted to do for quite some time.
Due to it's simplicity in parsing, and the number of resources available, it was a simple choice to make the custom language a lisp-like language.</p>
<h2><a href="#labview" aria-hidden="true" class="anchor" id="labview"></a>LabVIEW</h2>
<p><a href="https://github.com/JorisL/labview_lisp">The first version</a> of my custom interpreter was made in LabVIEW, for the following reasons:</p>
<ul>
<li>LabVIEW is often used at my job, but it had been a while since I programmed in it myself.
So I wanted to fresh up my knowledge.</li>
<li>There are lots of resources online, which I definitely needed to use, showing how to implement a lisp in a common language (Python, C, etc.).
Trying to implement it myself in LabVIEW, which uses a different paradigm than almost all other languages <sup class="footnote-ref"><a href="#fn-1" id="fnref-1" data-footnote-ref>1</a></sup>, forces me to actually understand what the examples show.</li>
<li>LabVIEW is arguably one of the worst (e.g. fun) languages suited for this kind of task.
And there are examples of people implementing a lisp in <a href="https://github.com/kanaka/mal">many languages</a>, I didn't yet see anyone who implemented something like this in LabVIEW.</li>
</ul>
<p>In this version of my programming language, I was eventually able to do things as defining functions and applying those functions to data.</p>
<pre><code class="language-lisp">(do
 ; get first element from a list
 (define first
   (lambda (x)
     (nth 0 x)))

 ; get remainder of list after first element
 (define rest
   (lambda (x)
     (nthrest 0 x)))

 ; insert element at the end of a list
 (define append
   (lambda (lst elt)
     (insert lst (len lst) elt)))

 ; apply return a list with func applied to each element of lst
 (define map
   (lambda (func lst)
     (do
       (define lstout (list))
       (while (not (= lst (list)))
         (do
           (define lstout (append lstout
                                  (func (first lst))))
           (define lst (rest lst))))
       lstout)))


  (map (lambda (x) (* x x))
      (list 1 2 3 4 5 6)))

; returns (1 4 9 16 25 36)

</code></pre>
<p>However, the implementation of this language needs a lot of recursion, and the number of recursive calls to VI's is severely limited.
Therefore the complexity of the program that can run are really limited.</p>
<h2><a href="#nim" aria-hidden="true" class="anchor" id="nim"></a>Nim</h2>
<p>After implementing an initial version in LabVIEW, I wanted to make an interpreter that would actually be capable of running 'something'.
For <a href="https://github.com/JorisL/nim_lisp">this implementation</a> I'd chosen <a href="https://nim-lang.org">Nim</a>, as it is a relatively high-level, but still quick and compiled, language.
This project was a good way of trying out the language.</p>
<p>In this version of the language I was able to add some additional functionalities, such as Macro support.
Using lisp macro's you are able to add features and structures to the language that can't be implemented as a function during execution.
See the snippet below from the 'standard library'; In the Nim interpreter I did not define how it should handle an <code>and</code> or <code>or</code> keyword,
and these cannot be implemented as functions<sup class="footnote-ref"><a href="#fn-2" id="fnref-2" data-footnote-ref>2</a></sup>.
But using macro's it is possible to define how these can be rewritten as, in this case, an if statement (which in turn is also defined as a macro).</p>
<pre><code class="language-lisp"> (define and
   (macro
    (a b)
    (quasiquote
     (if (unquote a) (unquote b) nil))))

 (define or
   (macro
    (a b)
    (quasiquote
     (if (unquote a) (unquote a) (unquote b)))))
</code></pre>
<p>In order to test that my programming language could actually do 'something', I <a href="https://github.com/JorisL/nim_lisp/blob/main/examples/bf/brainfuck.nlisp">implemented another programming language in it</a>.
Note that efficiency was not the main goal of this project ðŸ˜„<sup class="footnote-ref"><a href="#fn-3" id="fnref-3" data-footnote-ref>3</a></sup>.</p>
<hr />
<!-- Content Injected to every content markdown footer -->
<section class="footnotes" data-footnotes>
<ol>
<li id="fn-1">
<p>LabVIEW uses the dataflow programming paradigm, while most languages are instead of procedural, functional, and/or object oriented. <a href="#fnref-1" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="1" aria-label="Back to reference 1">â†©</a></p>
</li>
<li id="fn-2">
<p>A function always evaluates it's arguments. For example <code>(+ 2 (* 6 7))</code> first evaluates to <code>(+ 2 42)</code>.
But in, for example, an <code>and</code> statement, you only want the 2nd argument to be evaluated if the first argument is true.
Therefore it is not possible to implement an <code>and</code> statement, among others, as a function. <a href="#fnref-2" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="2" aria-label="Back to reference 2">â†©</a></p>
</li>
<li id="fn-3">
<p>Eventually I ran a brainfuck interpreter in my brainfuck interpreter in my lisp, and used that to run a brainfuck hello world program.
That one took around 24 hours to run. <a href="#fnref-3" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="3" aria-label="Back to reference 3">â†©</a></p>
</li>
</ol>
</section>
]]></content:encoded></item><item><title>Helix, Python, and Poetry</title><link>http:///helix-python-and-poetry.html</link><description><![CDATA["Setting up the Helix editor and python-lsp-server for poetry projects."]]></description><category>programming</category><category>python</category><category>helix</category><guid>http:///helix-python-and-poetry.html</guid><pubDate>Sat, 05 Nov 2022 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<h2><a href="#tldr" aria-hidden="true" class="anchor" id="tldr"></a>TL;DR</h2>
<ul>
<li>Set up poetry to store its virtual environment within the project root.</li>
<li>Install <code>python-lsp-server</code> and <code>black</code> within the virtual environment.</li>
<li>Open a terminal session with that virtual environment enabled
(<code>.venv/Scripts/Activate</code>).</li>
<li>Start the helix editor within that terminal session.</li>
</ul>
<h2><a href="#introduction" aria-hidden="true" class="anchor" id="introduction"></a>Introduction</h2>
<p>At work I've been developing several small-ish software projects in Python using
<a href="https://python-poetry.org">poetry</a> to manage the different dependencies,
virtual environments, etc. for each of those projects. So far I've mostly been
using Visual Studio Code to edit these projects, instead of using my old and
trusted <a href="https://github.com/JorisL/.emacs.d">Emacs config</a>.</p>
<p>The main reason for using VS Code was due to difficulties with Emacs to get the
Python language server protocol correctly working for those projects. It <em>was</em>
quite easy to install and set-up the python-lsp-server with emacs for projects
using the main installed Python installation on my PC, but each of these
projects had their own python virtual environment with various packages either
not installed or with a different version of my &quot;main&quot; Python installation. This
caused problems with the LSP server, where it would state multiple errors in my
code due to it not being able to find the various packages and libraries used in
those projects. With VS Code this wasn't a problem, since it was relatively easy
to select either the main Python installation on my PC or the Python
installation within the poetry virtual environment.</p>
<p>In principle this setup worked for development, but I wasn't entirely happy
using it. The editor I mostly used outside of this project was Emacs, which I
already set up with a modal editing mode slightly based on
<a href="https://kakoune.org">Kakoune</a>. While there <em>are</em> several extentions for VS code
to add a modal editing mode, they where never really a joy to use. Mostly due to
sluggishness and it still feeling like a &quot;hack&quot; on top of a non-modal editor,
instead of it beging an integraded experience. Furthermore several
functionalities I see as being essential to have in an editor, such as macros,
are not available in VS Code.</p>
<p>Lately I've been trying out the <a href="https://helix-editor.com">Helix</a> editor, and so
far it has been a joy to use. It is a lightweight, modal, terminal text editor,
similar to VIM. But where with VIM you practically need to install mutliple
additional packages to make it sort-of usable for day-to-day use (LSP, FZF,
surround, etc.), Helix already has most of these functions build-in. And since
the editor is build with those integrations from the ground up it is quite a lot
easier and straightforward to use. And the default keybindings are, in my
opinion, a lot easier to remember and use as those from VIM. Most of the things
I also did with Emacs seem to be relatively easy to do with Helix (with some
small tweaks, such as using markdown for notes instead of org mode).</p>
<p>So, in order to try and transfer my workflow to Helix, I've been trying to set
it up with both
<a href="https://github.com/python-lsp/python-lsp-server">python-lsp-server</a> and poetry,
and it seems I've found a workable solution for my use-case.</p>
<h2><a href="#how-to-configure-the-tools" aria-hidden="true" class="anchor" id="how-to-configure-the-tools"></a>How to configure the tools</h2>
<h3><a href="#poetry-local-venv-directory" aria-hidden="true" class="anchor" id="poetry-local-venv-directory"></a>Poetry local .venv directory</h3>
<p>Each poetry project always gets a seperate directory for storing it's Python
virtual environment. Thanks to this each project can have different versions of
Python and libraries installed without clashing with each other. By default a
directory is made in the <code>{cache-dir}/virtualenvs</code> of your PC, but poetry can
(and for this trick, should) also be set up to store the virtual-environment
data from a project within a .venv folder in the project root.</p>
<p>This is done by setting the <code>virtualenvs.in-project</code> within the
<a href="https://python-poetry.org/docs/configuration/#virtualenvsin-project">poetry configuration</a>
to <code>true</code>.</p>
<h3><a href="#activating-the-virtual-environment" aria-hidden="true" class="anchor" id="activating-the-virtual-environment"></a>Activating the virtual environment</h3>
<p>The .venv folder created within the project root contains scripts in order to
activate the virtual environment. See
<a href="https://docs.python.org/3/library/venv.html#how-venvs-work">this</a> section in
the Python documentation. Within Windows this can be activated by first opening
a powershell terminal within the project root and then running
<code>.venv\Scripts\Activate.ps1</code>. Now, for as long as this terminal is open, the
paths to Python and other related binaries and scripts are changed to those kept
in the .venv directory. Note that this only counts when running commands within
that powershell session. Opening a new powershell terminal parallel to this one,
then running Python from that one will use the standard system Python binary.</p>
<h3><a href="#installing-python-lsp-server-and-other-tools-within-the-virtual-environment" aria-hidden="true" class="anchor" id="installing-python-lsp-server-and-other-tools-within-the-virtual-environment"></a>Installing python-lsp-server and other tools within the virtual environment</h3>
<p>The trick to using LSP with Helix with a poetry project is to run Helix within
the powershell terminal after enabling the project's virtual environment. This
way, when the Helix process calls tools like <code>python-lsp-server</code> it will use the
Python installation as used in the poetry project. Therefore the LSP server also
correctly scans the project files with the python packages actually used in the
project.</p>
<p>But for this to work we now have to install <code>python-lsp-server</code> within the
project's virtual environment. The same counts for tools like <code>black</code>. Whilst in
the terminal with the virtual environment this can quickly be done using
<code>pip install python-lsp-server black</code>, but a better way would be to set up these
packages as requirements within the project's <code>pyproject.toml</code> file.</p>
<h3><a href="#setting-up-helix" aria-hidden="true" class="anchor" id="setting-up-helix"></a>Setting up Helix</h3>
<p>Configure the <code>languages.toml</code> file withing the Helix configuration directory
(<code>./config/helix/</code> or <code>%AppData%\\Roaming\\helix</code>) to use <code>pylsp</code> as the
language server (and if wanted <code>black</code> to be the code formatter), and make sure
to <strong>not</strong> use hard coded file paths for these. Otherwise when hard coded paths
are used it will not use the .venv versions when needed.</p>
<p>An example of this is shown below<sup class="footnote-ref"><a href="#fn-1" id="fnref-1" data-footnote-ref>1</a></sup><sup class="footnote-ref"><a href="#fn-2" id="fnref-2" data-footnote-ref>2</a></sup>:</p>
<pre><code class="language-{.toml">[[language]]
name = &quot;python&quot;
language-server = { command = &quot;pylsp&quot; }
formatter = { command = &quot;black&quot;, args = [&quot;--quiet&quot;, &quot;-&quot;] }
auto-format = true
</code></pre>
<p>including settings to set a max. line length for both formatting and linting.</p>
<p>settings, for example max. line lengths, since these are not read from the
poetry's <code>pyproject.toml</code> configuration file. According to the Helix
documentation it should be possible to include a <code>languages.toml</code> settings file
like above within a project, such that you can have different settings LSP or
formatter settings for different projects, but I've not tested that yet.</p>
<h3><a href="#testing-the-configuration" aria-hidden="true" class="anchor" id="testing-the-configuration"></a>Testing the configuration</h3>
<p>Helix has a startup option to check if the tools for a certain language are
correctly set up: <code>hx --health &lt;language&gt;</code>. When we open a new terminal window
and run this command with python as our language we should get something like
this:</p>
<pre><code>$ hx --health python
Configured language server: pylsp
Binary for language server: /opt/homebrew/bin/pylsp
Configured debug adapter: None
Highlight queries: âœ“
Textobject queries: âœ“
Indent queries: âœ˜
</code></pre>
<p>In this case the found language server binary is the one from our system Python
installation. But when this same command is executed from a terminal with the
virtual environment enabled we should see this path change to something like
<code>.venv/Scripts/pylsp</code>.</p>
<h2><a href="#usage" aria-hidden="true" class="anchor" id="usage"></a>Usage</h2>
<p>Now, when we want to edit files from the given poetry project we need to start a
terminal in the root folder of the poetry project, and then enable the virtual
environment. If we then run <code>hx</code> within that terminal<sup class="footnote-ref"><a href="#fn-3" id="fnref-3" data-footnote-ref>3</a></sup> it will use the
project's pylsp server instead of the system's pylsp server.</p>
<p>directory of Helix is now the project's working directory. Now commands like
<code>&lt;space&gt; f</code> will only search for files within the project.</p>
<p>To make things a bit easier we can make a script or terminal configuration to
open a terminal in the project's directory and automatically enable the virtual
environment. Within, for example, Windows Terminal, this can be done by creating
a new powershell configuration with the project's root as startup path and the
followin line as startup command:</p>
<pre><code>powershell -noexit .venv/Scripts/Activate.ps1
</code></pre>
<p>Now you can just start this configuration, run <code>hx</code>, and start editing. And a
2nd terminal with this configuration can be opened to run and debug the python
code.</p>
<!-- Content Injected to every content markdown footer -->
<section class="footnotes" data-footnotes>
<ol>
<li id="fn-1">
<p>see <a href="https://github.com/JorisL/helix">https://github.com/JorisL/helix</a> for my latest configuration, <a href="#fnref-1" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="1" aria-label="Back to reference 1">â†©</a></p>
</li>
<li id="fn-2">
<p>This is where we also must configure some LSP and formatter related <a href="#fnref-2" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="2" aria-label="Back to reference 2">â†©</a></p>
</li>
<li id="fn-3">
<p>An added benefit of running hx within this terminal is that the working <a href="#fnref-3" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="3" aria-label="Back to reference 3">â†©</a></p>
</li>
</ol>
</section>
]]></content:encoded></item><item><title>Removing password from protected Excel cells</title><link>http:///removing-password-from-protected-excel-cells.html</link><description><![CDATA["How to remove password protection from protected Excel cells using Emacs."]]></description><category>Emacs</category><category>Excel</category><guid>http:///removing-password-from-protected-excel-cells.html</guid><pubDate>Wed, 01 Jun 2022 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<h2><a href="#introduction" aria-hidden="true" class="anchor" id="introduction"></a>Introduction</h2>
<p>A while ago I received an Excel file where many of the formulas and calculations
where locked and made invisible using <a href="https://support.microsoft.com/en-au/office/require-a-password-to-open-or-modify-a-workbook-10579f0e-b2d9-4c05-b9f8-4109a6bce643">password protected sheets</a>.
The password was lost, making it &quot;impossible&quot; to view the formulas making up the
Excel file; only the resulting values. With this password-protected
functionality it is still possible to open the file without password. Also; the
values in protected cells are still updated when modifying one of the
unprotected cells its formula references to. Therefore the formulas behind the
cells should also still be unencrypted by a password.</p>
<p>A quick search on the internet at the time (stackoverflow, superuser, etc.) did
not get me an answer for how I could recover the file. But with a bit of
poking-around in the .xlsx file by myself I was able to disable this protection.</p>
<p>This post describes how I was able to find and disable this protection. As an
example for this post, I've prepared <a href="media/excel_password/locked_example.xlsx">this sheet protected Excel file</a>.
This excel file has a single formula in cell A1, but the sheet protection has
been set up such that you need to provide the correct password in order to
change, or even see the formula behind, the cell.</p>
<p><figure><img src="media/excel_password/locked.png" alt="Password protected Excel file, where only the value from cell A1 is visible, but not the underlying formula." /></figure></p>
<h2><a href="#exploring-excel-files" aria-hidden="true" class="anchor" id="exploring-excel-files"></a>Exploring Excel files</h2>
<p>After not finding a simple answer for disabling this password protection I went
looking around in the .xlsx file myself. One of the things I remembered having
read somewhere in the past was that .xlsx files are actually just .zip archives.
Therefore, we can just rename the file extention of our .xlsx file to .zip,
excract the archive, and explore its contents.</p>
<p>For our example file this archive mostly consists of .xml files, describing
various parts and properties in the workbook, but for larger Excel files it
could also contain various images, videos, and other embedded files. Since this
simple example file practically only consists of .xml files it is likely that
the info we're looking for is in one of those files. Normally I would edit these
in Emacs, and with that program we already have a trick up our sleeve. Emacs has
a
<a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Archives.html">build-in mode</a>
to edit text files within archives, without the need to unarchive the file
yourself. This can be used to edit text files in regular .zip or .tar archives,
but also in files like Java .jar and Excel .xlsx files which are actually
archives with a different file extention.</p>
<p>So; let's open our example .xlsx file in Emacs:</p>
<pre><code>M Filemode      Length  Date         Time      File
- ----------  --------  -----------  --------  ---------------------------------------
  -rw-rw-rw-      1276   1-Jan-1980  00:00:00  [Content_Types].xml
  -rw-rw-rw-       588   1-Jan-1980  00:00:00  _rels/.rels
  -rw-rw-rw-      2212   1-Jan-1980  00:00:00  xl/workbook.xml
  -rw-rw-rw-       690   1-Jan-1980  00:00:00  xl/_rels/workbook.xml.rels
  -rw-rw-rw-      1480   1-Jan-1980  00:00:00  xl/worksheets/sheet1.xml
  -rw-rw-rw-      8390   1-Jan-1980  00:00:00  xl/theme/theme1.xml
  -rw-rw-rw-      2313   1-Jan-1980  00:00:00  xl/styles.xml
  -rw-rw-rw-       322   1-Jan-1980  00:00:00  xl/worksheets/_rels/sheet1.xml.rels
  -rw-rw-rw-      5420   1-Jan-1980  00:00:00  xl/printerSettings/printerSettings1.bin
  -rw-rw-rw-       169   1-Jan-1980  00:00:00  xl/calcChain.xml
  -rw-rw-rw-       625   1-Jan-1980  00:00:00  docProps/core.xml
  -rw-rw-rw-       785   1-Jan-1980  00:00:00  docProps/app.xml
- ----------  --------  -----------  --------  ---------------------------------------
                 24270                         12 files
</code></pre>
<p>When opening an .xlsx file in Emacs, it is automatically opened as an explorable
.zip file. Here we see the different .xml files representing different parts of
the Excel file. In this case the example file only has one worksheet, in
<code>xl/worksheets/sheet1.xml</code>. Lets open it to see the information stored for this
sheet:</p>
<pre><code class="language-{.xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;
&lt;worksheet xmlns=&quot;http://schemas.openxmlformats.org/spreadsheetml/2006/main&quot; xmlns:r=&quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships&quot; xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; mc:Ignorable=&quot;x14ac xr xr2 xr3&quot; xmlns:x14ac=&quot;http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac&quot; xmlns:xr=&quot;http://schemas.microsoft.com/office/spreadsheetml/2014/revision&quot; xmlns:xr2=&quot;http://schemas.microsoft.com/office/spreadsheetml/2015/revision2&quot; xmlns:xr3=&quot;http://schemas.microsoft.com/office/spreadsheetml/2016/revision3&quot; xr:uid=&quot;{2838881A-D7EE-4880-9A40-583A7BEB231B}&quot;&gt;&lt;dimension ref=&quot;A1&quot;/&gt;&lt;sheetViews&gt;&lt;sheetView tabSelected=&quot;1&quot; workbookViewId=&quot;0&quot;/&gt;&lt;/sheetViews&gt;&lt;sheetFormatPr defaultRowHeight=&quot;15&quot; x14ac:dyDescent=&quot;0.25&quot;/&gt;&lt;sheetData&gt;&lt;row r=&quot;1&quot; spans=&quot;1:1&quot; x14ac:dyDescent=&quot;0.25&quot;&gt;&lt;c r=&quot;A1&quot; s=&quot;1&quot;&gt;&lt;f&gt;6*7&lt;/f&gt;&lt;v&gt;42&lt;/v&gt;&lt;/c&gt;&lt;/row&gt;&lt;/sheetData&gt;&lt;sheetProtection algorithmName=&quot;SHA-512&quot; hashValue=&quot;1vd8mFJrCEQ1cOfXy5dZkfZ3vsb5A+FmVy7S3xvY9MDhrCvfPKDgUJtrPL1XTEvoPLaZyeQL21LWeq8fSilt4g==&quot; saltValue=&quot;v5HhQTb+4xMaHY6/lDVUeQ==&quot; spinCount=&quot;100000&quot; sheet=&quot;1&quot; formatCells=&quot;0&quot; formatColumns=&quot;0&quot; formatRows=&quot;0&quot; insertColumns=&quot;0&quot; insertRows=&quot;0&quot; insertHyperlinks=&quot;0&quot; deleteColumns=&quot;0&quot; deleteRows=&quot;0&quot; sort=&quot;0&quot; autoFilter=&quot;0&quot; pivotTables=&quot;0&quot;/&gt;&lt;pageMargins left=&quot;0.7&quot; right=&quot;0.7&quot; top=&quot;0.75&quot; bottom=&quot;0.75&quot; header=&quot;0.3&quot; footer=&quot;0.3&quot;/&gt;&lt;pageSetup paperSize=&quot;9&quot; orientation=&quot;portrait&quot; r:id=&quot;rId1&quot;/&gt;&lt;/worksheet&gt;
</code></pre>
<p>Let's first fix the formatting for readability:</p>
<pre><code class="language-{.xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;
&lt;worksheet
    xmlns=&quot;http://schemas.openxmlformats.org/spreadsheetml/2006/main&quot;
    xmlns:r=&quot;http://schemas.openxmlformats.org/officeDocument/2006/relationships&quot;
    xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; mc:Ignorable=&quot;x14ac xr xr2 xr3&quot;
    xmlns:x14ac=&quot;http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac&quot;
    xmlns:xr=&quot;http://schemas.microsoft.com/office/spreadsheetml/2014/revision&quot;
    xmlns:xr2=&quot;http://schemas.microsoft.com/office/spreadsheetml/2015/revision2&quot;
    xmlns:xr3=&quot;http://schemas.microsoft.com/office/spreadsheetml/2016/revision3&quot; xr:uid=&quot;{2838881A-D7EE-4880-9A40-583A7BEB231B}&quot;&gt;
    &lt;dimension ref=&quot;A1&quot;/&gt;
    &lt;sheetViews&gt;
        &lt;sheetView tabSelected=&quot;1&quot; workbookViewId=&quot;0&quot;/&gt;
    &lt;/sheetViews&gt;
    &lt;sheetFormatPr defaultRowHeight=&quot;15&quot; x14ac:dyDescent=&quot;0.25&quot;/&gt;
    &lt;sheetData&gt;
        &lt;row r=&quot;1&quot; spans=&quot;1:1&quot; x14ac:dyDescent=&quot;0.25&quot;&gt;
            &lt;c r=&quot;A1&quot; s=&quot;1&quot;&gt;
                &lt;f&gt;6*7&lt;/f&gt;
                &lt;v&gt;42&lt;/v&gt;
            &lt;/c&gt;
        &lt;/row&gt;
    &lt;/sheetData&gt;
    &lt;sheetProtection algorithmName=&quot;SHA-512&quot; hashValue=&quot;1vd8mFJrCEQ1cOfXy5dZkfZ3vsb5A+FmVy7S3xvY9MDhrCvfPKDgUJtrPL1XTEvoPLaZyeQL21LWeq8fSilt4g==&quot; saltValue=&quot;v5HhQTb+4xMaHY6/lDVUeQ==&quot; spinCount=&quot;100000&quot; sheet=&quot;1&quot; formatCells=&quot;0&quot; formatColumns=&quot;0&quot; formatRows=&quot;0&quot; insertColumns=&quot;0&quot; insertRows=&quot;0&quot; insertHyperlinks=&quot;0&quot; deleteColumns=&quot;0&quot; deleteRows=&quot;0&quot; sort=&quot;0&quot; autoFilter=&quot;0&quot; pivotTables=&quot;0&quot;/&gt;
    &lt;pageMargins left=&quot;0.7&quot; right=&quot;0.7&quot; top=&quot;0.75&quot; bottom=&quot;0.75&quot; header=&quot;0.3&quot; footer=&quot;0.3&quot;/&gt;
    &lt;pageSetup paperSize=&quot;9&quot; orientation=&quot;portrait&quot; r:id=&quot;rId1&quot;/&gt;
&lt;/worksheet&gt;
</code></pre>
<p>We can see that, as expected, all the information from cell A1 is still in the
worksheet:</p>
<pre><code class="language-{.xml}">&lt;c r=&quot;A1&quot; s=&quot;1&quot;&gt;
    &lt;f&gt;6*7&lt;/f&gt;
    &lt;v&gt;42&lt;/v&gt;
&lt;/c&gt;
</code></pre>
<p>But more importantly, we can also find the following XML tag:</p>
<pre><code class="language-{.xml}">&lt;sheetProtection algorithmName=&quot;SHA-512&quot; hashValue=&quot;1vd8mFJrCEQ1cOfXy5dZkfZ3vsb5A+FmVy7S3xvY9MDhrCvfPKDgUJtrPL1XTEvoPLaZyeQL21LWeq8fSilt4g==&quot; saltValue=&quot;v5HhQTb+4xMaHY6/lDVUeQ==&quot; spinCount=&quot;100000&quot; sheet=&quot;1&quot; formatCells=&quot;0&quot; formatColumns=&quot;0&quot; formatRows=&quot;0&quot; insertColumns=&quot;0&quot; insertRows=&quot;0&quot; insertHyperlinks=&quot;0&quot; deleteColumns=&quot;0&quot; deleteRows=&quot;0&quot; sort=&quot;0&quot; autoFilter=&quot;0&quot; pivotTables=&quot;0&quot;/&gt;
</code></pre>
<p>So, what if we remove the entire <code>SheetProtection</code> tag from the xml file?</p>
<p><figure><img src="media/excel_password/unlocked.png" alt="The excel sheet is unprotected, and we can see and modify the formula of cell A1." /></figure></p>
<h2><a href="#automating-the-password-removal-process" aria-hidden="true" class="anchor" id="automating-the-password-removal-process"></a>Automating the password removal process</h2>
<p>We already found one of the advantages of using a text editor like Emacs. In
this case we where able to edit a text file within an archived file without
unzipping and re-zipping the file. Otherwise (in Windows), we would need to:</p>
<ol>
<li>change the file format from .xlsx file to .zip</li>
<li>unzip the file</li>
<li>modify the .xml file</li>
<li>zip the entire directory</li>
<li>change the resulting archives file format from .zip file to .xlsx</li>
</ol>
<p>And these last parts can already lead to issues. The standard zip archiving
settings from Windows differ from the default archiving settings from an .xlsx
file, and using these causes the resulting .xlsx file to be invalid.</p>
<p>One of the other major advantages with Emacs is that, practically everything the
user can do, can be automated in elisp. For example: we can call <code>C-h k &lt;enter&gt;</code>
in the .xlsx buffer in Emacs to find the function called when trying to open the
corresponding .xml file on that line:</p>
<pre><code>RET (translated from &lt;return&gt;) runs the command archive-extract (found in archive-mode-map), which is an interactive
compiled Lisp function in â€˜arc-mode.elâ€™.

It is bound to RET, e..f, &lt;mouse-2&gt;, &lt;menu-bar&gt; &lt;immediate&gt; &lt;find-file&gt;.

(archive-extract &amp;optional OTHER-WINDOW-P EVENT)

In archive mode, extract this entry of the archive into its own buffer.

[back]
</code></pre>
<p>Using this info we can write a script to perform exactly the same actions in
Emacs as would be done manually. But emacs-lisp is also a full-fledged
programming language, so we can extend the 'macro' with loops, if/else cases,
etc..</p>
<p>The result of this work is the following interactive emacs-lisp function:</p>
<pre><code class="language-{.commonlisp">(defun excel-remove-sheet-protection ()
  &quot;Remove sheet protection from an Excel xlsx file.&quot;
  (interactive)
  (find-file (read-file-name &quot;Enter xlsx file path/name: &quot;))  ;open excel file as zip-folder
  (beginning-of-buffer)
  (while (condition-case nil              ;try to do this for all sheets
             (search-forward-regexp &quot;xl/worksheets/sheet.*?\.xml&quot;)
           (error nil))                    ;try to move cursor to next sheet.xml
    (let ((current_xml_point (point)))    ;store the current sheet
      ;; open the sheet and remove the &quot;sheetprotection&quot; xml tag
      (archive-extract)
      (beginning-of-buffer)
      (while (re-search-forward &quot;&lt;sheetprotection.*?&gt;&quot; nil t)
        (replace-match &quot;&quot;))
      (save-buffer)
      (kill-buffer)
      (goto-char current_xml_point))))     ;put cursor at last sheet
</code></pre>
<p>When calling this function (by <code>M-x excel-remove-sheet-protection</code>), Emacs first
asks the user for a path to the .xlsx file. Emacs will then open this file, and
for each sheet in the Excel file it will open the corresponding .xml file and
remove the sheetprotection tag.</p>
<p>The result after calling this function is that, after a few seconds of runtime,
all the password sheet protections are removed from the Excel file.</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Generating juggling siteswaps</title><link>http:///generating-juggling-siteswaps.html</link><description><![CDATA["Generating juggling patterns in Julia using graph theory."]]></description><category>programming</category><category>Julia</category><category>juggling</category><guid>http:///generating-juggling-siteswaps.html</guid><pubDate>Tue, 01 Mar 2022 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p><a href="https://blog.jorisl.nl/media/siteswaps_julia/siteswaps_julia.html">Link to Jupyter notebook</a></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Automatic differentiation &amp; dual numbers</title><link>http:///automatic-differentiation-dual-numbers.html</link><description><![CDATA["Implementing automatic differentiation in Julia using dual numbers."]]></description><category>programming</category><category>Julia</category><guid>http:///automatic-differentiation-dual-numbers.html</guid><pubDate>Tue, 01 Mar 2022 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p><a href="https://blog.jorisl.nl/media/autodiff/autodiff.html">Link to Jupyter notebook</a></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Debunking the Kubie &apos;energy saving device&apos;</title><link>http:///debunking-the-kubie-energy-saving-device.html</link><description><![CDATA["Debunking the Kubie 'energy saving device'."]]></description><category>scam</category><guid>http:///debunking-the-kubie-energy-saving-device.html</guid><pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate><source url="http://">index</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<h2><a href="#introduction" aria-hidden="true" class="anchor" id="introduction"></a>Introduction</h2>
<p>Last week someone asked me to take a look if this
<a href="https://www.pq-eu.com/kubie-producten/series-home/">&quot;energy saving device&quot;</a>
from Power Quality Europe could be an option for their house. This device, the
Kubie, is a device which in the words of its manufacturer saves a minimum of 8%
and up to 20% on your electricity bill.</p>
<p>This post is a brief breakdown of why the manufacturer's claims don't take into account real-life usage,
and why this device practically increases the electricity usage instead of decresing it.</p>
<h2><a href="#what-is-the-kubie" aria-hidden="true" class="anchor" id="what-is-the-kubie"></a>What is the Kubie</h2>
<p>Within Europe the mains voltage is specified as being 230VAC+10%/-6%, which
means the voltage is allowed to be anywhere between 216V and 253V. Most devices
however can handle slightly lower voltages, for example between 207V and 253V.
Or in the case of devices with a switch mode power supply anywhere between 90V
and 250V (which means that they, for example, also can be used in the US without
any modifications).</p>
<p>The Kubie is, in practice, a glorified transformer which is placed directly
behind the main circuit breaker of your house. This device outputs a 218-220V
voltage for all appliances in your home, independent of the tolerances of the
mains voltage supplied to your house, and the idea behind this device is that,
by Ohm's law, devices will use less current with this device installed since
the voltage to that device is limited, and therefore also will use less power.</p>
<p>The following example calculation is given on their
<a href="https://www.pq-eu.com/bespaar-met-lagere-spanning/">website</a>:</p>
<p>A 230V, 2000W device has a resistance of $\frac{230(V)^2}{2000(W)} =
26.45(\Omega)$.</p>
<p>When the voltage is reduced to 218V it will consume
$\frac{218(V)^2}{26.45(\Omega)} = 1797(W)$</p>
<p>The power saving is therefore $1 - \frac{1797(W)}{2000(W)} \cdot 100 % \approx
10.2%$</p>
<p>A second calculation, but now with a 240V mains reference voltage results in an
apparent saving of $1 - \frac{1797(W)}{(\frac{240(V)^2}{26.45(Omega)})} \cdot
100 % \approx 17.5%$.</p>
<p>remark: the percentages on the site are slightly different since they further
calculate the savings into Euro's, which after rounding down to cents adds some
rounding errors.</p>
<p>In the example they do correctly mention that multiple factors will influence
the actual amount saved, but in their words</p>
<blockquote>
<p>&quot;...but this calculation example gives a good view of the possible savings...&quot;</p>
</blockquote>
<p>which people will likely interpret as it being a realistic example (which it
isn't).</p>
<h2><a href="#their-claims" aria-hidden="true" class="anchor" id="their-claims"></a>Their claims</h2>
<p>Translated from their brochure:</p>
<blockquote>
<p>&quot;Depending on the new voltage level and the used equipment, a total power
saving between 10 and 20% will be realized!&quot;</p>
</blockquote>
<p>Later on in their brochure they made return of interest calculations for several
types of houses, where they assume this device saves 13.8% of the total power
consumption in that house.</p>
<h2><a href="#validating-their-claims" aria-hidden="true" class="anchor" id="validating-their-claims"></a>Validating their claims</h2>
<p>In order to check their claims I want to look at 2 things:</p>
<ol>
<li>On which devices it actually can have an energy-saving effect.</li>
<li>Power consumption of the Kubie.</li>
</ol>
<h3><a href="#effected-devices" aria-hidden="true" class="anchor" id="effected-devices"></a>Effected devices</h3>
<p>First of all, lets take a look on which devices this technique could and will
not work. Roughly speaking a device can fall in one of two categories:</p>
<ul>
<li>constant-impedance</li>
<li>constant-power</li>
</ul>
<p>With constant-impedance devices the current draw decreases when the voltage
decreases, according to Ohms law. These are mostly devices where a
power-consumer, such as a motor or heater, are directly connected to the mains
power. Examples include:</p>
<ul>
<li>heater</li>
<li>electric stove</li>
<li>fridge</li>
<li>incandescent lights</li>
</ul>
<p>These devices can often be recognized by only working on a small range of input
voltages (e.g. 230V<code>\plusmn10</code>{=latex}%) or having a voltage selection switch.</p>
<p>Constant-power devices often have a switch-mode power supply, or similar, and
these devices practically consume as much current as the electronics behind the
power supply requires, independent on the voltage. These devices can therefore
often be recognized by being able to work on a wide range of input voltages
(e.g. 90V-250V). Examples include:</p>
<ul>
<li>TV</li>
<li>Computer</li>
<li>Phone charger</li>
<li>LED lights</li>
<li>Electric car charger</li>
</ul>
<p>Lowering the supply voltage to a constant-power device practically doesn't have
any effect on it's power usage, since it automatically draws more current to
compensate for the power loss.</p>
<p>Lowering the supply voltage to a constant-impedance device does influence the
<em>instantaneous</em> power draw, but more often than not it doesn't have any effect
on your electricity bill. The reason is that most of these devices are have a
control-loop.</p>
<p>Take, for example, an electric heater. Let's assume it tries to keep a room at
a set temperature, and the room looses heat to the outside at a rate of 100W.
E.g. the heater needs to provide an average power of 100W to keep the room at
the set temperature. When the heater is able to supply 1000W, then it will be on
for $\frac{100(W)}{1000(W)} = 10%$ of the time. When the heater is only able to
supply 800W, for example by lowering its supply voltage, then it will be on for
$\frac{100(W)}{800(W)} = 12.5%$ of the time. In practice it just doesn't
matter how much the heaters instantaneous power is, what counts is the average
power it needs to keep the room at temperature.</p>
<p>Another example is an electric kettle. The kettle needs a certain amount of
energy to boil a certain amount of water, and in practice it doesn't matter if
it is heated by a 1500W or 2000W kettle. The larger-power kettle does its job in
a shorter amount of time, and they practically both use the same amount of
energy (power Ã— time) to bring the same amount of water to a boil.</p>
<p>Practically all devices that heat or cool something work this way, so the Kubie
also doesn't have any practical effect on:</p>
<ul>
<li>Fridges</li>
<li>Electric heaters</li>
<li>Coffee machines</li>
<li>Air-conditioners</li>
<li>Electric irons</li>
<li>etc.</li>
</ul>
<p>It also doesn't have effect on <em>part of</em> the power draw from devices which both
heat and have motors/pumps, such as:</p>
<ul>
<li>Dishwashers</li>
<li>Washing machines</li>
<li>Clothes dryers</li>
</ul>
<p>And finally there are also devices which don't have a build-in
<a href="https://simple.wikipedia.org/wiki/Control_system">controller</a>, but where, in
practice, the user acts as the controller. One example of this is a vacuum
cleaner. In principle the power it draws depends on the input voltage, but also
on the suction power dial on the vacuum itself. So:</p>
<ul>
<li>When the input power of the vacuum is lowered, the user can turn the dial up
to increase the suction power back again (up to a limit), and</li>
<li>The user can dial down the vacuum for less power use for the cost of less
suction power.</li>
</ul>
<p>Another example is a hair dryer, where the user chooses its power and duration,
until its task is performed. And lowering the maximum power to the device
doesn't change that much on the overall energy usage; it is just used until it
has provided enough energy to dry hair, which takes longer with lower power.</p>
<p>So, what percentage of electricity use is actually positively influenced by the
Kubie? Let's use <a href="https://www.eia.gov/tools/faqs/faq.php?id=96&amp;t=3">this</a> table
from the U.S. Energy Information Administration as baseline<sup class="footnote-ref"><a href="#fn-1" id="fnref-1" data-footnote-ref>1</a></sup>:</p>
<p>End use Share of total Energy saved by lowering supply voltage?</p>
<table>
<thead>
<tr>
<th>End use</th>
<th align="right">Share of total</th>
<th align="right">Energy Saved By Lowering Supply Voltage?</th>
</tr>
</thead>
<tbody>
<tr>
<td>Space cooling</td>
<td align="right">16%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Space heating</td>
<td align="right">15%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Water heating</td>
<td align="right">12%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Refrigeration</td>
<td align="right">6%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Clothes dryers</td>
<td align="right">5%</td>
<td align="right">Partly</td>
</tr>
<tr>
<td>Lighting</td>
<td align="right">4%</td>
<td align="right">No (assuming LED lights)</td>
</tr>
<tr>
<td>Televisions and related equipment</td>
<td align="right">4%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Computers and related equipment</td>
<td align="right">2%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Furnace fans and boiler circulation pumps</td>
<td align="right">2%</td>
<td align="right">Yes</td>
</tr>
<tr>
<td>Freezers</td>
<td align="right">1%</td>
<td align="right">No</td>
</tr>
<tr>
<td>Cooking</td>
<td align="right">1%</td>
<td align="right">No<sup class="footnote-ref"><a href="#fn-2" id="fnref-2" data-footnote-ref>2</a></sup></td>
</tr>
<tr>
<td>Clothes washers</td>
<td align="right">1%</td>
<td align="right">Partly</td>
</tr>
<tr>
<td>Dishwashers</td>
<td align="right">1%</td>
<td align="right">Partly</td>
</tr>
<tr>
<td>Other uses</td>
<td align="right">31%</td>
<td align="right">Depends</td>
</tr>
</tbody>
</table>
<p>So we can see that, by far, most of the electric energy used in a household will
not be influenced at all by lowering the mains voltage. All by all I would be
very surprised if more than 10% of the energy used in a household can actually
be influenced by this device. So, if we assume the nominal mains voltage is
230V, and the device saves 10.2% <em>on the 10% of devices it actually has effect
on</em>, then this device will only save 1% of total energy usage.</p>
<p>Its effect will even get less significant in the future, as more power will be
drawn by unaffected devices:</p>
<ul>
<li>Electric cars get more and more common.</li>
<li>Use of natural gas will decline, and therefore more people will use electric
heating and cooking.</li>
<li>The number of air-conditioners in Europe rising due to climate change.</li>
</ul>
<h3><a href="#power-consumption-of-the-kubie-itself" aria-hidden="true" class="anchor" id="power-consumption-of-the-kubie-itself"></a>Power consumption of the Kubie itself</h3>
<p>Like mentioned before: the Kubie is practically just a transformer, and like
with each transformer it doesn't have a 100% efficiency.</p>
<p>The data-sheet in the brochure states that the power loss in the device at
zero-load is 23W. Note that, in comparison to a lot of other devices in your
home, this device is on 24/7. Given that the average yearly power consumption of
a household is $3500(kWh)$ <sup class="footnote-ref"><a href="#fn-3" id="fnref-3" data-footnote-ref>3</a></sup>, these losses already account for an <em>added</em>
$\frac{23(W) \cdot 1(yr)}{3500(kWh)} \approx 5.6 %$ on the total household
power consumption.</p>
<p>This is even without taking into account other additional power losses caused by
the device, such as:</p>
<ul>
<li>The load-dependent power losses of the device itself.</li>
<li>Wiring power losses due to higher current consumption of constant-power
devices.</li>
</ul>
<h2><a href="#bottom-line" aria-hidden="true" class="anchor" id="bottom-line"></a>Bottom line</h2>
<p>The story given by the company on their website and in their brochure pains a
nice picture, where:</p>
<ul>
<li>All calculations seem to assume that all devices benefit from a lower supply
voltage.</li>
<li>The device only saves power, but doesn't consume power itself.</li>
</ul>
<p>Both assumptions are plain false, and the manufacturer <strong>should</strong> know this.</p>
<p>They do mention that, certain types of devices, will not benefit from this
device, but they fail to mention that it is by far the majority of devices which
will not benefit. They also do give the efficiency values of their device
(although difficult to find), but other than those 2 rows (out of 33 in the
data-sheet) they keep these efficiency losses out of all their calculations.</p>
<p>The calculations the company provides in their return-of-interest calculations
assume 13.8% power saving. In their claims this is the average power savings by
100 customers. This is already more than the saving of 'an ideal' (for them)
device being powered from the Kubie instead of 230V (which results in a 10.2%
lower power draw). My gut feeling, however, is that they just asked 100
customers what their mains voltage was (which would in this case be in the 235V
range), used that voltage, and calculated as if each single device is positively
effected by this device, and didn't take into account the efficiency losses in
the device itself.</p>
<p>If we actually take a look at our calculations, where we do take into account
that most devices do not benefit and that the Kubie itself isn't 100%
efficient, we see that:</p>
<ul>
<li>The energy saved in other appliances by this device is somewhere in the 1%
range of total household energy consumption, if not lower.</li>
<li>The efficiency power losses from the device itself are, at least, 5.6% of
total household energy consumption<sup class="footnote-ref"><a href="#fn-4" id="fnref-4" data-footnote-ref>4</a></sup>.</li>
</ul>
<p>This rough estimation therefore shows that this device doesn't save power, but
<em>adds</em> an additional $5.6% - 1% = 4.6%$ to your total energy bill. Quite the
change from their <em>&quot;Depending on the new voltage level and the used equipment,
a total power saving between 10 and 20% will be realized!&quot;</em> claim.</p>
<p>If we then calculate further, based on the same $0.26\frac{\unicode{0x20AC}}{kWh}$ energy price
and $0.572\frac{kg}{kWh}$ CO2 emission factor they use in their return of
investment calculations, we see that, by having this device installed, your
annual bill goes up by an average of:</p>
<p>$3500(\frac{kWh}{yr}) \cdot 4.6(\%) \cdot 0.26(\frac{\unicode{0x20AC}}{kWh}) \approx 42(\frac{\unicode{0x20AC}}{yr})$</p>
<p>and you will cause an average of:</p>
<p>$3500(\frac{kWh}{yr}) \cdot 4.6(\%) \cdot 0.572(\frac{kg}{kWh}) \approx 90(\frac{kg}{yr})$</p>
<p>of CO2 to be generated in the atmosphere.</p>
<p>And that all for a bit more more than â‚¬600 to actually have that device
installed in your home<sup class="footnote-ref"><a href="#fn-5" id="fnref-5" data-footnote-ref>5</a></sup>.</p>
<h2><a href="#closing-words" aria-hidden="true" class="anchor" id="closing-words"></a>Closing words</h2>
<p>Personally I'm getting sick and tired of these kinds of snake-oil companies
who, either by malice or just gross incompetence, try to sell stuff under the
flag of &quot;green energy&quot;, &quot;power saving&quot;, etc.. More often than not these
devices do more harm than good, and this device also seems to be one of the
latter ones.</p>
<p>In effect you could say that these kinds of companies are actively working
against the environment, since all they seem to do is:</p>
<ul>
<li>selling junk that doesn't benefit the environment at all, and more often than
not does the opposite.</li>
<li>taking away money people have budgeted for energy saving improvement, causing
them to not have that money available to make change that actually <em>are</em>
beneficial for the environment.</li>
</ul>
<p>So what did this company already caused? Apparently they already sold 1300 of
these devices<sup class="footnote-ref"><a href="#fn-6" id="fnref-6" data-footnote-ref>6</a></sup>. Assuming each of these units now has been running for 3 years
on average, then by just having these units installed they already caused in the
range of</p>
<p>$90(\frac{kg}{yr}) \cdot 3(yr) \cdot 1300 \approx 0.35\cdot10^6(kg)$</p>
<p>of CO2 to be emitted in the air. Let that sink in; roughly 350 metric tonnes of
CO2. And let's not even talk about what they will eventually have caused over
the manufacturers claimed 40 year lifetime...</p>
<p>And for all people who still want to have some kind of &quot;whizzbang magical black
magic woo-woo device&quot; in their home to save power: During a tear-down of a
device strikingly similar in function our great friend BigClive proposed to just
install his
<a href="https://www.youtube.com/watch?v=zKasA4HxaGY&amp;t=1265s">Energy Saver 300+</a>. It's
way cheaper, and likely a lot better for the environment, than this pile of
garbage.</p>
<!-- Content Injected to every content markdown footer -->
<section class="footnotes" data-footnotes>
<ol>
<li id="fn-1">
<p>Some percentages will differ between the US and the Netherlands.
Air-conditioning is, for example, a lot less present in Dutch households. But
this was the best data I could find about the share of power between different
household appliances. <a href="#fnref-1" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="1" aria-label="Back to reference 1">â†©</a></p>
</li>
<li id="fn-2">
<p>Assuming the user can actually cook, and doesn't just continuously put
the furnace on full power. <a href="#fnref-2" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="2" aria-label="Back to reference 2">â†©</a></p>
</li>
<li id="fn-3">
<p><a href="https://www.engie.nl/product-advies/gemiddeld-energieverbruik/gemiddeld-stroomverbruik">https://www.engie.nl/product-advies/gemiddeld-energieverbruik/gemiddeld-stroomverbruik</a> <a href="#fnref-3" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="3" aria-label="Back to reference 3">â†©</a></p>
</li>
<li id="fn-4">
<p>Yes, in principle the heating of this device can cause the heaters in your
house to work less, but A: part of the time you don't want to have your house
heated but cooled, and B: in practice it requires more energy to extract heat
from somewhere than it is to heat it. Let's just assume therefore that the heat
energy added by this device doesn't change the overall average energy use. <a href="#fnref-4" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="4" aria-label="Back to reference 4">â†©</a></p>
</li>
<li id="fn-5">
<p>â‚¬479 unit cost + â‚¬135 installation cost. <a href="#fnref-5" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="5" aria-label="Back to reference 5">â†©</a></p>
</li>
<li id="fn-6">
<p><a href="https://www.deondernemer.nl/innovatie/henk-dinkelaar-kubie-tuv-stroom-laag-energieverbruik~3212970">https://www.deondernemer.nl/innovatie/henk-dinkelaar-kubie-tuv-stroom-laag-energieverbruik~3212970</a> <a href="#fnref-6" class="footnote-backref" data-footnote-backref data-footnote-backref-idx="6" aria-label="Back to reference 6">â†©</a></p>
</li>
</ol>
</section>
]]></content:encoded></item></channel></rss>